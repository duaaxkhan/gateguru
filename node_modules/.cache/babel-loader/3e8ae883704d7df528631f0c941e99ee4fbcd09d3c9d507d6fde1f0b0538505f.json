{"ast":null,"code":"var _jsxFileName = \"/Users/duaashahid/Desktop/gateguru/client/src/components/Dplot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport firebaseConfig from './firebase'; // Import Firebase configuration from firebase.js\n\n// Initialize Firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nconst UploadVideoForm = () => {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [videoPerc, setVideoPerc] = useState(0);\n  const fileInputRef = useRef(null);\n  const uploadFile = file => {\n    const storage = firebase.storage();\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = storage.ref(fileName);\n    const uploadTask = storageRef.put(file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setVideoPerc(Math.round(progress));\n      switch (snapshot.state) {\n        case \"paused\":\n          console.log(\"Upload is paused\");\n          break;\n        case \"running\":\n          console.log(\"Upload is running\");\n          break;\n        default:\n          break;\n      }\n    }, error => {\n      console.log(error);\n      switch (error.code) {\n        case \"storage/unauthorized\":\n          // User doesn't have permission to access the object\n          console.log(error);\n          break;\n        case \"storage/canceled\":\n          // User canceled the upload\n          break;\n        case \"storage/unknown\":\n          // Unknown error occurred, inspect error.serverResponse\n          break;\n        default:\n          break;\n      }\n    }, () => {\n      // Upload completed successfully, now we can get the download URL\n      uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n        console.log('DownloadURL - ', downloadURL);\n        // Do something with the download URL, like setting it in state\n      });\n    });\n  };\n\n  const handleFileChange = e => {\n    setVideoFile(e.target.files[0]);\n  };\n  const handleUpload = e => {\n    e.preventDefault();\n    if (!videoFile) {\n      alert('Please select a video file.');\n      return;\n    }\n    uploadFile(videoFile);\n  };\n  const handleClickUpload = () => {\n    // Trigger click event on file input\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"video/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickUpload,\n      children: \"Select Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), videoPerc > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Uploading: \", videoPerc, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadVideoForm, \"0O1L4C28BfzP3y/uLRP/Wl6iqM8=\");\n_c = UploadVideoForm;\nexport default UploadVideoForm;\nvar _c;\n$RefreshReg$(_c, \"UploadVideoForm\");","map":{"version":3,"names":["React","useState","useRef","firebase","firebaseConfig","jsxDEV","_jsxDEV","apps","length","initializeApp","UploadVideoForm","_s","videoFile","setVideoFile","videoPerc","setVideoPerc","fileInputRef","uploadFile","file","storage","fileName","Date","getTime","name","storageRef","ref","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","state","console","log","error","code","getDownloadURL","then","downloadURL","handleFileChange","e","target","files","handleUpload","preventDefault","alert","handleClickUpload","current","click","children","type","style","display","accept","onChange","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/duaashahid/Desktop/gateguru/client/src/components/Dplot.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport firebaseConfig from './firebase'; // Import Firebase configuration from firebase.js\n\n// Initialize Firebase\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst UploadVideoForm = () => {\n  const [videoFile, setVideoFile] = useState(null);\n  const [videoPerc, setVideoPerc] = useState(0);\n  const fileInputRef = useRef(null);\n\n  const uploadFile = (file) => {\n    const storage = firebase.storage();\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = storage.ref(fileName);\n    const uploadTask = storageRef.put(file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setVideoPerc(Math.round(progress));\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n          default:\n            break;\n        }\n      },\n      (error) => {\n        console.log(error);\n        switch (error.code) {\n          case \"storage/unauthorized\":\n            // User doesn't have permission to access the object\n            console.log(error);\n            break;\n          case \"storage/canceled\":\n            // User canceled the upload\n            break;\n          case \"storage/unknown\":\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n          default:\n            break;\n        }\n      },\n      () => {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n          console.log('DownloadURL - ', downloadURL);\n          // Do something with the download URL, like setting it in state\n        });\n      }\n    );\n  };\n\n  const handleFileChange = (e) => {\n    setVideoFile(e.target.files[0]);\n  };\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    if (!videoFile) {\n      alert('Please select a video file.');\n      return;\n    }\n    uploadFile(videoFile);\n  };\n\n  const handleClickUpload = () => {\n    // Trigger click event on file input\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        accept=\"video/*\"\n        onChange={handleFileChange}\n      />\n      <button onClick={handleClickUpload}>Select Video</button>\n      {videoPerc > 0 && <div>Uploading: {videoPerc}%</div>}\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default UploadVideoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}