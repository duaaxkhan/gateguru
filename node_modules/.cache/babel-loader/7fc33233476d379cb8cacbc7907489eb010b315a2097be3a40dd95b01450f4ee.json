{"ast":null,"code":"import _objectSpread from\"/Users/duaashahid/Desktop/gateguru/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/duaashahid/Desktop/gateguru/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/duaashahid/Desktop/gateguru/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/duaashahid/Desktop/gateguru/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React from \"react\";\n// import Navbar from \"./Navbar\";\n// function TrainingServices() {\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px]  justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n//         <div className=\" flex flex-col justify-center items-center\">\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video1\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video1\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 1</button>\n//           </label>\n//         </form>\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video2\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video2\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 2</button>\n//           </label>\n//         </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default TrainingServices;\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// function TrainingServices() {\n//   const [video1, setVideo1] = useState(null);\n//   const [video2, setVideo2] = useState(null);\n//   const [isUploading, setIsUploading] = useState(false);\n//   const handleVideoUpload = async () => {\n//     if (!video1 || !video2) {\n//       alert(\"Please select both videos\");\n//       return;\n//     }\n//     setIsUploading(true);\n//     const formData = new FormData();\n//     formData.append('video1', video1);\n//     formData.append('video2', video2);\n//     try {\n//       console.log('Uploading videos...');\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST',\n//         body: formData\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Videos uploaded successfully', result);\n//       } else {\n//         console.error('Failed to upload videos', result);\n//       }\n//     } catch (error) {\n//       console.error('Error uploading videos:', error);\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n//   const handleFileChange = (event, setter) => {\n//     const file = event.target.files[0];\n//     setter(file);\n//   };\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video1\" className=\"mr-4\">\n//               Select Video 1\n//               <input\n//                 type=\"file\"\n//                 id=\"video1\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo1)}\n//               />\n//             </label>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video2\" className=\"mr-4\">\n//               Select Video 2\n//               <input\n//                 type=\"file\"\n//                 id=\"video2\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo2)}\n//               />\n//             </label>\n//           </div>\n//           <button onClick={handleVideoUpload} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isUploading ? 'Uploading...' : 'Upload Videos'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default TrainingServices;\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// function TrainingServices() {\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameter'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default TrainingServices;\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\n// import walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\n// import walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\n// import walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\n// import Slider from \"react-slick\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n// const logos = [walk1, walk2, walk3, walk4];\n// const textBelowImages = [\"Step length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\n// function TrainingServices() {\n//   const settings = {\n//     infinite: true,\n//     speed: 6000,\n//     slidesToShow: logos.length - 1,\n//     slidesToScroll: 1,\n//     autoplay: true,\n//     autoplaySpeed: 0,\n//     centerMode: true,\n//     centerPadding: \"0\",\n//     swipeToSlide: false,\n//   };\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [gaitParameters, setGaitParameters] = useState(null);\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//         setGaitParameters(result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n//         <p className=\"text-center mb-6 text-lg\">\n//           After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n//         </p>\n//         <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n//           <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n//           <Slider {...settings} className=\"pt-10 pb-10\">\n//             {logos.map((logo, index) => (\n//               <div key={index} className=\"text-center\">\n//                 <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n//                 <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n//               </div>\n//             ))}\n//           </Slider>\n//         </div>\n//         <div className=\"flex flex-col justify-center items-center pt-20\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n//           </button>\n//         </div>\n//         {gaitParameters && (\n//           <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n//             <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n//               <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n//               <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n//               <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n//               <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n//               <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n//               <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n//               <p>{gaitParameters.gait_speed}</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default TrainingServices;\n//hiiiii\nimport React,{useState}from\"react\";import Navbar from\"./Navbar\";import walk1 from\"../walk.png\";import walk2 from\"../walking.png\";import walk3 from\"../shoes.png\";import walk4 from\"../footprint.png\";import walk5 from\"../foot.png\";import walk6 from\"../parkinson.png\";import Slider from\"react-slick\";import\"slick-carousel/slick/slick.css\";import\"slick-carousel/slick/slick-theme.css\";import Newsletter from\"./Newsletter.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var logos=[walk1,walk2,walk3,walk4,walk5,walk6];var textBelowImages=[\"Step Length\",\"Gait Speed\",\"Stance Time\",\"Step Time\",\"Swing Time\",\"Double Stance Time\"];var descriptions=[\"The distance measured from the heel print of one foot to the heel print of the other foot.\",\"The speed at which a person walks, typically measured in meters per second.\",\"The amount of time that a foot remains in contact with the ground during walking.\",\"The duration of time between two successive steps.\",\"Swing time is the amount of time the foot spends off the ground in the gait cycle,\",\"Double support time is the proportion of time that both feet are touching the ground during walking. \"];function TrainingServices(){var settings={infinite:true,speed:6000,slidesToShow:logos.length-1,slidesToScroll:1,autoplay:true,autoplaySpeed:0,centerMode:true,centerPadding:\"0\",swipeToSlide:false};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isProcessing=_useState2[0],setIsProcessing=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),gaitParameters=_useState4[0],setGaitParameters=_useState4[1];var handleGetGaitParameter=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setIsProcessing(true);_context.prev=1;_context.next=4;return fetch('http://127.0.0.1:5000/api/gaitparameters',{method:'POST'});case 4:response=_context.sent;_context.next=7;return response.json();case 7:result=_context.sent;if(response.ok){console.log('Gait parameters calculated successfully',result);setGaitParameters(result);}else{console.error('Failed to calculate gait parameters',result);}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error('Error calculating gait parameters:',_context.t0);case 14:_context.prev=14;setIsProcessing(false);return _context.finish(14);case 17:case\"end\":return _context.stop();}},_callee,null,[[1,11,14,17]]);}));return function handleGetGaitParameter(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full mx-auto bg-black md:h-[1900px] sm:h-[200px] text-white justify-center items-center\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mt-10 mb-6 text-center text-3xl\",children:\"Extracting Gait Info\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center mb-6 text-lg\",children:\"After clicking on the \\\"Get Gait Parameter\\\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full md:h-[350px] sm:h-[200px] bg-white\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center text-2xl pt-10\",children:\"Key Offerings\"}),/*#__PURE__*/_jsx(Slider,_objectSpread(_objectSpread({},settings),{},{className:\"pt-10 pb-10\",children:logos.map(function(logo,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo \".concat(index),className:\"mx-auto w-20\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-black\",children:textBelowImages[index]})]},index);})}))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container w-full md:h-[850px] sm:h-[200px] bg-white my-10\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center text-3xl pt-10 text-black\",children:\"Gait Parameters\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 p-10\",children:logos.map(function(logo,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Service \".concat(index),className:\"w-[80px] pt-10\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-black pt-10\",children:textBelowImages[index]}),/*#__PURE__*/_jsx(\"p\",{className:\"pt-2 text-black text-center\",children:descriptions[index]})]},index);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col justify-center items-center pt-20\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleGetGaitParameter,className:\"px-4 py-4 bg-gray-800 text-white rounded-md\",children:isProcessing?'Processing...':'Get Gait Parameters'})}),gaitParameters&&/*#__PURE__*/_jsxs(\"div\",{className:\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center text-2xl mb-4 text-black font-bold\",children:\"Gait Parameters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl text-black font-bold\",children:\"Step Time\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Right: \",gaitParameters.step_time.right.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Left: \",gaitParameters.step_time.left.join(', ')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl text-black font-bold\",children:\"Stance Time\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Right: \",gaitParameters.stance_time.right.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Left: \",gaitParameters.stance_time.left.join(', ')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl text-black font-bold\",children:\"Swing Time\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Right: \",gaitParameters.swing_time.right.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Left: \",gaitParameters.swing_time.left.join(', ')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl text-black font-bold\",children:\"Double Support Time\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Left to Right: \",gaitParameters.ds_time.left_to_right.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Right to Left: \",gaitParameters.ds_time.right_to_left.join(', ')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl text-black font-bold\",children:\"Step Length\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Right: \",gaitParameters.step_length.right.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Left: \",gaitParameters.step_length.left.join(', ')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl text-black font-bold\",children:\"Gait Speed\"}),/*#__PURE__*/_jsx(\"p\",{children:gaitParameters.gait_speed})]})]}),/*#__PURE__*/_jsx(Newsletter,{})]})]});}export default TrainingServices;","map":{"version":3,"names":["React","useState","Navbar","walk1","walk2","walk3","walk4","walk5","walk6","Slider","Newsletter","jsx","_jsx","jsxs","_jsxs","logos","textBelowImages","descriptions","TrainingServices","settings","infinite","speed","slidesToShow","length","slidesToScroll","autoplay","autoplaySpeed","centerMode","centerPadding","swipeToSlide","_useState","_useState2","_slicedToArray","isProcessing","setIsProcessing","_useState3","_useState4","gaitParameters","setGaitParameters","handleGetGaitParameter","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","method","sent","json","ok","console","log","error","t0","finish","stop","apply","arguments","className","children","_objectSpread","map","logo","index","src","alt","concat","onClick","step_time","right","join","left","stance_time","swing_time","ds_time","left_to_right","right_to_left","step_length","gait_speed"],"sources":["/Users/duaashahid/Desktop/gateguru/client/src/components/TrainingServices.jsx"],"sourcesContent":["// import React from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px]  justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\" flex flex-col justify-center items-center\">\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video1\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video1\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 1</button>\n//           </label>\n//         </form>\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video2\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video2\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 2</button>\n//           </label>\n//         </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [video1, setVideo1] = useState(null);\n//   const [video2, setVideo2] = useState(null);\n//   const [isUploading, setIsUploading] = useState(false);\n\n//   const handleVideoUpload = async () => {\n//     if (!video1 || !video2) {\n//       alert(\"Please select both videos\");\n//       return;\n//     }\n  \n//     setIsUploading(true);\n  \n//     const formData = new FormData();\n//     formData.append('video1', video1);\n//     formData.append('video2', video2);\n  \n//     try {\n//       console.log('Uploading videos...');\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST',\n//         body: formData\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Videos uploaded successfully', result);\n//       } else {\n//         console.error('Failed to upload videos', result);\n//       }\n//     } catch (error) {\n//       console.error('Error uploading videos:', error);\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n  \n//   const handleFileChange = (event, setter) => {\n//     const file = event.target.files[0];\n//     setter(file);\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video1\" className=\"mr-4\">\n//               Select Video 1\n//               <input\n//                 type=\"file\"\n//                 id=\"video1\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo1)}\n//               />\n//             </label>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video2\" className=\"mr-4\">\n//               Select Video 2\n//               <input\n//                 type=\"file\"\n//                 id=\"video2\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo2)}\n//               />\n//             </label>\n//           </div>\n//           <button onClick={handleVideoUpload} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isUploading ? 'Uploading...' : 'Upload Videos'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n\n\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [isProcessing, setIsProcessing] = useState(false);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameter'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\n// import walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\n// import walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\n// import walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\n// import Slider from \"react-slick\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n\n// const logos = [walk1, walk2, walk3, walk4];\n// const textBelowImages = [\"Step length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\n\n// function TrainingServices() {\n//   const settings = {\n//     infinite: true,\n//     speed: 6000,\n//     slidesToShow: logos.length - 1,\n//     slidesToScroll: 1,\n//     autoplay: true,\n//     autoplaySpeed: 0,\n//     centerMode: true,\n//     centerPadding: \"0\",\n//     swipeToSlide: false,\n//   };\n\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [gaitParameters, setGaitParameters] = useState(null);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//         setGaitParameters(result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n//         <p className=\"text-center mb-6 text-lg\">\n//           After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n//         </p>\n\n//         <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n//           <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n//           <Slider {...settings} className=\"pt-10 pb-10\">\n//             {logos.map((logo, index) => (\n//               <div key={index} className=\"text-center\">\n//                 <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n//                 <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n//               </div>\n//             ))}\n//           </Slider>\n//         </div>\n\n//         <div className=\"flex flex-col justify-center items-center pt-20\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n//           </button>\n//         </div>\n\n//         {gaitParameters && (\n//           <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n//             <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n//               <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n//               <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n//               <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n//               <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n//               <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n//               <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n//               <p>{gaitParameters.gait_speed}</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n\n//hiiiii\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport walk1 from \"../walk.png\";\nimport walk2 from \"../walking.png\";\nimport walk3 from \"../shoes.png\";\nimport walk4 from \"../footprint.png\";\nimport walk5 from\"../foot.png\";\nimport walk6 from \"../parkinson.png\"\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Newsletter from \"./Newsletter.jsx\";\n\nconst logos = [walk1, walk2, walk3, walk4,walk5,walk6];\nconst textBelowImages = [\"Step Length\", \"Gait Speed\", \"Stance Time\", \"Step Time\",\"Swing Time\",\"Double Stance Time\"];\nconst descriptions = [\n  \"The distance measured from the heel print of one foot to the heel print of the other foot.\",\n  \"The speed at which a person walks, typically measured in meters per second.\",\n  \"The amount of time that a foot remains in contact with the ground during walking.\",\n  \"The duration of time between two successive steps.\",\n  \"Swing time is the amount of time the foot spends off the ground in the gait cycle,\",\n  \"Double support time is the proportion of time that both feet are touching the ground during walking. \"\n];\n\nfunction TrainingServices() {\n  const settings = {\n    infinite: true,\n    speed: 6000,\n    slidesToShow: logos.length - 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 0,\n    centerMode: true,\n    centerPadding: \"0\",\n    swipeToSlide: false,\n  };\n\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [gaitParameters, setGaitParameters] = useState(null);\n\n  const handleGetGaitParameter = async () => {\n    setIsProcessing(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n        method: 'POST'\n      });\n\n      const result = await response.json();\n      if (response.ok) {\n        console.log('Gait parameters calculated successfully', result);\n        setGaitParameters(result);\n      } else {\n        console.error('Failed to calculate gait parameters', result);\n      }\n    } catch (error) {\n      console.error('Error calculating gait parameters:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full mx-auto bg-black md:h-[1900px] sm:h-[200px] text-white justify-center items-center\">\n      <Navbar />\n      <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n        <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n        <p className=\"text-center mb-6 text-lg\">\n          After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n        </p>\n\n        <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n          <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n          <Slider {...settings} className=\"pt-10 pb-10\">\n            {logos.map((logo, index) => (\n              <div key={index} className=\"text-center\">\n                <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n                <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n              </div>\n            ))}\n          </Slider>\n        </div>\n\n        <div className=\"container w-full md:h-[850px] sm:h-[200px] bg-white my-10\">\n          <h1 className=\"text-center text-3xl pt-10 text-black\">Gait Parameters</h1>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-10\">\n            {logos.map((logo, index) => (\n              <div key={index} className=\"flex flex-col items-center\">\n                <img src={logo} alt={`Service ${index}`} className=\"w-[80px] pt-10\" />\n                <h2 className=\"font-bold text-black pt-10\">{textBelowImages[index]}</h2>\n                <p className=\"pt-2 text-black text-center\">{descriptions[index]}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex flex-col justify-center items-center pt-20\">\n          <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n            {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n          </button>\n        </div>\n\n        {gaitParameters && (\n          <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n            <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n              <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n              <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n              <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n              <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n              <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n              <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n              <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n              <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n              <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n              <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n              <p>{gaitParameters.gait_speed}</p>\n            </div>\n          </div>\n        )}\n        <Newsletter/>\n      </div>\n    </div>\n  );\n}\n\nexport default TrainingServices;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}