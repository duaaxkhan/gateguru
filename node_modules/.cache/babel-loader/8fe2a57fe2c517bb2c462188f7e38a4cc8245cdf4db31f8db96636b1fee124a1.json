{"ast":null,"code":"// import React from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px]  justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\" flex flex-col justify-center items-center\">\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video1\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video1\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 1</button>\n//           </label>\n//         </form>\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video2\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video2\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 2</button>\n//           </label>\n//         </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [video1, setVideo1] = useState(null);\n//   const [video2, setVideo2] = useState(null);\n//   const [isUploading, setIsUploading] = useState(false);\n\n//   const handleVideoUpload = async () => {\n//     if (!video1 || !video2) {\n//       alert(\"Please select both videos\");\n//       return;\n//     }\n\n//     setIsUploading(true);\n\n//     const formData = new FormData();\n//     formData.append('video1', video1);\n//     formData.append('video2', video2);\n\n//     try {\n//       console.log('Uploading videos...');\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST',\n//         body: formData\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Videos uploaded successfully', result);\n//       } else {\n//         console.error('Failed to upload videos', result);\n//       }\n//     } catch (error) {\n//       console.error('Error uploading videos:', error);\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n\n//   const handleFileChange = (event, setter) => {\n//     const file = event.target.files[0];\n//     setter(file);\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video1\" className=\"mr-4\">\n//               Select Video 1\n//               <input\n//                 type=\"file\"\n//                 id=\"video1\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo1)}\n//               />\n//             </label>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video2\" className=\"mr-4\">\n//               Select Video 2\n//               <input\n//                 type=\"file\"\n//                 id=\"video2\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo2)}\n//               />\n//             </label>\n//           </div>\n//           <button onClick={handleVideoUpload} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isUploading ? 'Uploading...' : 'Upload Videos'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [isProcessing, setIsProcessing] = useState(false);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameter'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\n// import walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\n// import walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\n// import walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\n// import Slider from \"react-slick\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n\n// const logos = [walk1, walk2, walk3, walk4];\n// const textBelowImages = [\"Step length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\n\n// function TrainingServices() {\n//   const settings = {\n//     infinite: true,\n//     speed: 6000,\n//     slidesToShow: logos.length - 1,\n//     slidesToScroll: 1,\n//     autoplay: true,\n//     autoplaySpeed: 0,\n//     centerMode: true,\n//     centerPadding: \"0\",\n//     swipeToSlide: false,\n//   };\n\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [gaitParameters, setGaitParameters] = useState(null);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//         setGaitParameters(result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n//         <p className=\"text-center mb-6 text-lg\">\n//           After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n//         </p>\n\n//         <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n//           <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n//           <Slider {...settings} className=\"pt-10 pb-10\">\n//             {logos.map((logo, index) => (\n//               <div key={index} className=\"text-center\">\n//                 <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n//                 <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n//               </div>\n//             ))}\n//           </Slider>\n//         </div>\n\n//         <div className=\"flex flex-col justify-center items-center pt-20\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n//           </button>\n//         </div>\n\n//         {gaitParameters && (\n//           <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n//             <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n//               <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n//               <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n//               <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n//               <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n//               <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n//               <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n//               <p>{gaitParameters.gait_speed}</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n//hiiiii","map":{"version":3,"names":[],"sources":["/Users/duaashahid/Desktop/gateguru/client/src/components/TrainingServices.jsx"],"sourcesContent":["// import React from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px]  justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\" flex flex-col justify-center items-center\">\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video1\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video1\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 1</button>\n//           </label>\n//         </form>\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video2\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video2\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 2</button>\n//           </label>\n//         </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [video1, setVideo1] = useState(null);\n//   const [video2, setVideo2] = useState(null);\n//   const [isUploading, setIsUploading] = useState(false);\n\n//   const handleVideoUpload = async () => {\n//     if (!video1 || !video2) {\n//       alert(\"Please select both videos\");\n//       return;\n//     }\n  \n//     setIsUploading(true);\n  \n//     const formData = new FormData();\n//     formData.append('video1', video1);\n//     formData.append('video2', video2);\n  \n//     try {\n//       console.log('Uploading videos...');\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST',\n//         body: formData\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Videos uploaded successfully', result);\n//       } else {\n//         console.error('Failed to upload videos', result);\n//       }\n//     } catch (error) {\n//       console.error('Error uploading videos:', error);\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n  \n//   const handleFileChange = (event, setter) => {\n//     const file = event.target.files[0];\n//     setter(file);\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video1\" className=\"mr-4\">\n//               Select Video 1\n//               <input\n//                 type=\"file\"\n//                 id=\"video1\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo1)}\n//               />\n//             </label>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video2\" className=\"mr-4\">\n//               Select Video 2\n//               <input\n//                 type=\"file\"\n//                 id=\"video2\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo2)}\n//               />\n//             </label>\n//           </div>\n//           <button onClick={handleVideoUpload} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isUploading ? 'Uploading...' : 'Upload Videos'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n\n\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [isProcessing, setIsProcessing] = useState(false);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameter'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\n// import walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\n// import walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\n// import walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\n// import Slider from \"react-slick\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n\n// const logos = [walk1, walk2, walk3, walk4];\n// const textBelowImages = [\"Step length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\n\n// function TrainingServices() {\n//   const settings = {\n//     infinite: true,\n//     speed: 6000,\n//     slidesToShow: logos.length - 1,\n//     slidesToScroll: 1,\n//     autoplay: true,\n//     autoplaySpeed: 0,\n//     centerMode: true,\n//     centerPadding: \"0\",\n//     swipeToSlide: false,\n//   };\n\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [gaitParameters, setGaitParameters] = useState(null);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//         setGaitParameters(result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n//         <p className=\"text-center mb-6 text-lg\">\n//           After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n//         </p>\n\n//         <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n//           <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n//           <Slider {...settings} className=\"pt-10 pb-10\">\n//             {logos.map((logo, index) => (\n//               <div key={index} className=\"text-center\">\n//                 <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n//                 <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n//               </div>\n//             ))}\n//           </Slider>\n//         </div>\n\n//         <div className=\"flex flex-col justify-center items-center pt-20\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n//           </button>\n//         </div>\n\n//         {gaitParameters && (\n//           <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n//             <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n//               <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n//               <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n//               <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n//               <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n//               <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n//               <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n//               <p>{gaitParameters.gait_speed}</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n\n//hiiiii"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}