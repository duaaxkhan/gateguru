{"ast":null,"code":"var _jsxFileName = \"/Users/duaashahid/Desktop/gateguru/client/src/components/TrainingServices.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px]  justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\" flex flex-col justify-center items-center\">\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video1\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video1\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 1</button>\n//           </label>\n//         </form>\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video2\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video2\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 2</button>\n//           </label>\n//         </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [video1, setVideo1] = useState(null);\n//   const [video2, setVideo2] = useState(null);\n//   const [isUploading, setIsUploading] = useState(false);\n\n//   const handleVideoUpload = async () => {\n//     if (!video1 || !video2) {\n//       alert(\"Please select both videos\");\n//       return;\n//     }\n\n//     setIsUploading(true);\n\n//     const formData = new FormData();\n//     formData.append('video1', video1);\n//     formData.append('video2', video2);\n\n//     try {\n//       console.log('Uploading videos...');\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST',\n//         body: formData\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Videos uploaded successfully', result);\n//       } else {\n//         console.error('Failed to upload videos', result);\n//       }\n//     } catch (error) {\n//       console.error('Error uploading videos:', error);\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n\n//   const handleFileChange = (event, setter) => {\n//     const file = event.target.files[0];\n//     setter(file);\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video1\" className=\"mr-4\">\n//               Select Video 1\n//               <input\n//                 type=\"file\"\n//                 id=\"video1\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo1)}\n//               />\n//             </label>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video2\" className=\"mr-4\">\n//               Select Video 2\n//               <input\n//                 type=\"file\"\n//                 id=\"video2\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo2)}\n//               />\n//             </label>\n//           </div>\n//           <button onClick={handleVideoUpload} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isUploading ? 'Uploading...' : 'Upload Videos'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [isProcessing, setIsProcessing] = useState(false);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameter'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\n// import walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\n// import walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\n// import walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\n// import Slider from \"react-slick\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n\n// const logos = [walk1, walk2, walk3, walk4];\n// const textBelowImages = [\"Step length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\n\n// function TrainingServices() {\n//   const settings = {\n//     infinite: true,\n//     speed: 6000,\n//     slidesToShow: logos.length - 1,\n//     slidesToScroll: 1,\n//     autoplay: true,\n//     autoplaySpeed: 0,\n//     centerMode: true,\n//     centerPadding: \"0\",\n//     swipeToSlide: false,\n//   };\n\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [gaitParameters, setGaitParameters] = useState(null);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//         setGaitParameters(result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n//         <p className=\"text-center mb-6 text-lg\">\n//           After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n//         </p>\n\n//         <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n//           <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n//           <Slider {...settings} className=\"pt-10 pb-10\">\n//             {logos.map((logo, index) => (\n//               <div key={index} className=\"text-center\">\n//                 <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n//                 <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n//               </div>\n//             ))}\n//           </Slider>\n//         </div>\n\n//         <div className=\"flex flex-col justify-center items-center pt-20\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n//           </button>\n//         </div>\n\n//         {gaitParameters && (\n//           <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n//             <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n//               <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n//               <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n//               <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n//               <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n//               <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n//               <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n//               <p>{gaitParameters.gait_speed}</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n//hiiiii\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\nimport walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\nimport walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\nimport walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logos = [walk1, walk2, walk3, walk4];\nconst textBelowImages = [\"Step Length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\nconst descriptions = [\"The distance measured from the heel print of one foot to the heel print of the other foot.\", \"The speed at which a person walks, typically measured in meters per second.\", \"The amount of time that a foot remains in contact with the ground during walking.\", \"The duration of time between two successive steps.\"];\nfunction TrainingServices() {\n  _s();\n  const settings = {\n    infinite: true,\n    speed: 6000,\n    slidesToShow: logos.length - 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 0,\n    centerMode: true,\n    centerPadding: \"0\",\n    swipeToSlide: false\n  };\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [gaitParameters, setGaitParameters] = useState(null);\n  const handleGetGaitParameter = async () => {\n    setIsProcessing(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n        method: 'POST'\n      });\n      const result = await response.json();\n      if (response.ok) {\n        console.log('Gait parameters calculated successfully', result);\n        setGaitParameters(result);\n      } else {\n        console.error('Failed to calculate gait parameters', result);\n      }\n    } catch (error) {\n      console.error('Error calculating gait parameters:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full mx-auto bg-black text-white justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-10 mb-6 text-center text-3xl\",\n        children: \"Extracting Gait Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mb-6 text-lg\",\n        children: \"After clicking on the \\\"Get Gait Parameter\\\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:h-[350px] sm:h-[200px] bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-2xl pt-10\",\n          children: \"Key Offerings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          ...settings,\n          className: \"pt-10 pb-10\",\n          children: logos.map((logo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: `Logo ${index}`,\n              className: \"mx-auto w-20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-black\",\n              children: textBelowImages[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container w-full md:h-[350px] sm:h-[200px  bg-white my-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-2xl pt-10 text-black\",\n          children: \"Gait Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 p-10\",\n          children: logos.map((logo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: `Service ${index}`,\n              className: \"w-[80px] pt-10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"font-bold text-black pt-10\",\n              children: textBelowImages[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pt-2 text-black text-center\",\n              children: descriptions[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-center pt-20\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetGaitParameter,\n          className: \"px-4 py-4 bg-gray-800 text-white rounded-md\",\n          children: isProcessing ? 'Processing...' : 'Get Gait Parameters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), gaitParameters && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center text-2xl mb-4 text-black font-bold\",\n          children: \"Gait Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-black font-bold\",\n            children: \"Step Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Right: \", gaitParameters.step_time.right.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Left: \", gaitParameters.step_time.left.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-black font-bold\",\n            children: \"Stance Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Right: \", gaitParameters.stance_time.right.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Left: \", gaitParameters.stance_time.left.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-black font-bold\",\n            children: \"Swing Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Right: \", gaitParameters.swing_time.right.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Left: \", gaitParameters.swing_time.left.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-black font-bold\",\n            children: \"Double Support Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Left to Right: \", gaitParameters.ds_time.left_to_right.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Right to Left: \", gaitParameters.ds_time.right_to_left.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-black font-bold\",\n            children: \"Step Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Right: \", gaitParameters.step_length.right.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Left: \", gaitParameters.step_length.left.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl text-black font-bold\",\n            children: \"Gait Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: gaitParameters.gait_speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n}\n_s(TrainingServices, \"iGRAdUf8ArolLT4m3eMwDq6AeO4=\");\n_c = TrainingServices;\nexport default TrainingServices;\nvar _c;\n$RefreshReg$(_c, \"TrainingServices\");","map":{"version":3,"names":["React","useState","Navbar","walk1","walk2","walk3","walk4","Slider","jsxDEV","_jsxDEV","logos","textBelowImages","descriptions","TrainingServices","_s","settings","infinite","speed","slidesToShow","length","slidesToScroll","autoplay","autoplaySpeed","centerMode","centerPadding","swipeToSlide","isProcessing","setIsProcessing","gaitParameters","setGaitParameters","handleGetGaitParameter","response","fetch","method","result","json","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","logo","index","src","alt","onClick","step_time","right","join","left","stance_time","swing_time","ds_time","left_to_right","right_to_left","step_length","gait_speed","_c","$RefreshReg$"],"sources":["/Users/duaashahid/Desktop/gateguru/client/src/components/TrainingServices.jsx"],"sourcesContent":["// import React from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px]  justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\" flex flex-col justify-center items-center\">\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video1\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video1\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 1</button>\n//           </label>\n//         </form>\n//         <form onSubmit={(e) => e.preventDefault()} className=\"flex flex-row mb-4\">\n//           <label htmlFor=\"video2\" className=\"mr-4\">\n//             <input type=\"file\" id=\"video2\" accept=\"video/*\" className=\"hidden\" />\n//             <button className=\"px-4 py-2 bg-gray-800 text-white rounded-md\" type=\"submit\">Select Video 2</button>\n//           </label>\n//         </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [video1, setVideo1] = useState(null);\n//   const [video2, setVideo2] = useState(null);\n//   const [isUploading, setIsUploading] = useState(false);\n\n//   const handleVideoUpload = async () => {\n//     if (!video1 || !video2) {\n//       alert(\"Please select both videos\");\n//       return;\n//     }\n  \n//     setIsUploading(true);\n  \n//     const formData = new FormData();\n//     formData.append('video1', video1);\n//     formData.append('video2', video2);\n  \n//     try {\n//       console.log('Uploading videos...');\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST',\n//         body: formData\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Videos uploaded successfully', result);\n//       } else {\n//         console.error('Failed to upload videos', result);\n//       }\n//     } catch (error) {\n//       console.error('Error uploading videos:', error);\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n  \n//   const handleFileChange = (event, setter) => {\n//     const file = event.target.files[0];\n//     setter(file);\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video1\" className=\"mr-4\">\n//               Select Video 1\n//               <input\n//                 type=\"file\"\n//                 id=\"video1\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo1)}\n//               />\n//             </label>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"video2\" className=\"mr-4\">\n//               Select Video 2\n//               <input\n//                 type=\"file\"\n//                 id=\"video2\"\n//                 accept=\"video/*\"\n//                 onChange={(e) => handleFileChange(e, setVideo2)}\n//               />\n//             </label>\n//           </div>\n//           <button onClick={handleVideoUpload} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isUploading ? 'Uploading...' : 'Upload Videos'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n\n\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n\n// function TrainingServices() {\n//   const [isProcessing, setIsProcessing] = useState(false);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1100px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center\">Extracting Gait Info</h1>\n\n//         <div className=\"flex flex-col justify-center items-center\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-2 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameter'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n// import React, { useState } from \"react\";\n// import Navbar from \"./Navbar\";\n// import walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\n// import walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\n// import walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\n// import walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\n// import Slider from \"react-slick\";\n// import \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n\n// const logos = [walk1, walk2, walk3, walk4];\n// const textBelowImages = [\"Step length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\n\n// function TrainingServices() {\n//   const settings = {\n//     infinite: true,\n//     speed: 6000,\n//     slidesToShow: logos.length - 1,\n//     slidesToScroll: 1,\n//     autoplay: true,\n//     autoplaySpeed: 0,\n//     centerMode: true,\n//     centerPadding: \"0\",\n//     swipeToSlide: false,\n//   };\n\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [gaitParameters, setGaitParameters] = useState(null);\n\n//   const handleGetGaitParameter = async () => {\n//     setIsProcessing(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n//         method: 'POST'\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         console.log('Gait parameters calculated successfully', result);\n//         setGaitParameters(result);\n//       } else {\n//         console.error('Failed to calculate gait parameters', result);\n//       }\n//     } catch (error) {\n//       console.error('Error calculating gait parameters:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n//       <Navbar />\n//       <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n//         <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n//         <p className=\"text-center mb-6 text-lg\">\n//           After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n//         </p>\n\n//         <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n//           <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n//           <Slider {...settings} className=\"pt-10 pb-10\">\n//             {logos.map((logo, index) => (\n//               <div key={index} className=\"text-center\">\n//                 <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n//                 <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n//               </div>\n//             ))}\n//           </Slider>\n//         </div>\n\n//         <div className=\"flex flex-col justify-center items-center pt-20\">\n//           <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n//             {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n//           </button>\n//         </div>\n\n//         {gaitParameters && (\n//           <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n//             <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n//               <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n//               <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n//               <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n//               <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n//               <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n//               <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n//               <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n//             </div>\n//             <div className=\"mt-4\">\n//               <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n//               <p>{gaitParameters.gait_speed}</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TrainingServices;\n\n\n//hiiiii\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport walk1 from \"/Users/duaashahid/Desktop/gateguru/client/src/walk.png\";\nimport walk2 from \"/Users/duaashahid/Desktop/gateguru/client/src/walking.png\";\nimport walk3 from \"/Users/duaashahid/Desktop/gateguru/client/src/shoes.png\";\nimport walk4 from \"/Users/duaashahid/Desktop/gateguru/client/src/footprint.png\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst logos = [walk1, walk2, walk3, walk4];\nconst textBelowImages = [\"Step Length\", \"Gait Speed\", \"Stance Time\", \"Step Time\"];\nconst descriptions = [\n  \"The distance measured from the heel print of one foot to the heel print of the other foot.\",\n  \"The speed at which a person walks, typically measured in meters per second.\",\n  \"The amount of time that a foot remains in contact with the ground during walking.\",\n  \"The duration of time between two successive steps.\"\n];\n\nfunction TrainingServices() {\n  const settings = {\n    infinite: true,\n    speed: 6000,\n    slidesToShow: logos.length - 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 0,\n    centerMode: true,\n    centerPadding: \"0\",\n    swipeToSlide: false,\n  };\n\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [gaitParameters, setGaitParameters] = useState(null);\n\n  const handleGetGaitParameter = async () => {\n    setIsProcessing(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/gaitparameters', {\n        method: 'POST'\n      });\n\n      const result = await response.json();\n      if (response.ok) {\n        console.log('Gait parameters calculated successfully', result);\n        setGaitParameters(result);\n      } else {\n        console.error('Failed to calculate gait parameters', result);\n      }\n    } catch (error) {\n      console.error('Error calculating gait parameters:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full mx-auto bg-black text-white justify-center items-center\">\n      <Navbar />\n      <div className=\"bg-black w-full md:h-[1400px] sm:h-[800px] justify-center items-center\">\n        <h1 className=\"mt-10 mb-6 text-center text-3xl\">Extracting Gait Info</h1>\n        <p className=\"text-center mb-6 text-lg\">\n          After clicking on the \"Get Gait Parameter\" button, you need to first select the original video and then the OpenPose video, which you can get from the 3D plot service.\n        </p>\n\n        <div className=\"w-full md:h-[350px] sm:h-[200px] bg-white\">\n          <h1 className=\"text-center text-2xl pt-10\">Key Offerings</h1>\n          <Slider {...settings} className=\"pt-10 pb-10\">\n            {logos.map((logo, index) => (\n              <div key={index} className=\"text-center\">\n                <img src={logo} alt={`Logo ${index}`} className=\"mx-auto w-20\" />\n                <p className=\"mt-2 text-black\">{textBelowImages[index]}</p>\n              </div>\n            ))}\n          </Slider>\n        </div>\n\n        <div className=\"container w-full md:h-[350px] sm:h-[200px  bg-white my-10\">\n          <h1 className=\"text-center text-2xl pt-10 text-black\">Gait Parameters</h1>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-10\">\n            {logos.map((logo, index) => (\n              <div key={index} className=\"flex flex-col items-center\">\n                <img src={logo} alt={`Service ${index}`} className=\"w-[80px] pt-10\" />\n                <h2 className=\"font-bold text-black pt-10\">{textBelowImages[index]}</h2>\n                <p className=\"pt-2 text-black text-center\">{descriptions[index]}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex flex-col justify-center items-center pt-20\">\n          <button onClick={handleGetGaitParameter} className=\"px-4 py-4 bg-gray-800 text-white rounded-md\">\n            {isProcessing ? 'Processing...' : 'Get Gait Parameters'}\n          </button>\n        </div>\n\n        {gaitParameters && (\n          <div className=\"mx-60 mt-8 bg-gray-200 text-black p-6 rounded-md shadow-lg\">\n            <h2 className=\"text-center text-2xl mb-4 text-black font-bold\">Gait Parameters</h2>\n\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Step Time</h3>\n              <p>Right: {gaitParameters.step_time.right.join(', ')}</p>\n              <p>Left: {gaitParameters.step_time.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Stance Time</h3>\n              <p>Right: {gaitParameters.stance_time.right.join(', ')}</p>\n              <p>Left: {gaitParameters.stance_time.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Swing Time</h3>\n              <p>Right: {gaitParameters.swing_time.right.join(', ')}</p>\n              <p>Left: {gaitParameters.swing_time.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Double Support Time</h3>\n              <p>Left to Right: {gaitParameters.ds_time.left_to_right.join(', ')}</p>\n              <p>Right to Left: {gaitParameters.ds_time.right_to_left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Step Length</h3>\n              <p>Right: {gaitParameters.step_length.right.join(', ')}</p>\n              <p>Left: {gaitParameters.step_length.left.join(', ')}</p>\n            </div>\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl text-black font-bold\">Gait Speed</h3>\n              <p>{gaitParameters.gait_speed}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TrainingServices;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}